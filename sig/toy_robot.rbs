module ToyRobot
  VERSION: String

  class Robot
    DIRECTIONS: Array[String]

    attr_reader east: Integer
    attr_reader north: Integer
    attr_reader direction: String

    def initialize: (?Integer, ?Integer, ?String) -> void

    def move: () -> void
    def move_east: () -> void
    def move_north: () -> void
    def move_south: () -> void
    def move_west: () -> void

    def report: () -> Hash[Symbol, String | Integer]

    def turn_left: () -> void
    def turn_right: () -> void

    private

    def turn: (:left | :right) -> void
  end

  class Table
    def initialize: (Integer, Integer) -> void

    def valid_location?: (Integer, Integer) -> bool
  end

  class Simulator
    attr_reader robot: Robot

    def initialize: (Table) -> void

    def place: (Integer, Integer, String) -> Robot?
  end

  class Command
    def self.process: (String) -> (
      [Symbol, (Integer | 0), (Integer | 0), String?]
      | [Symbol, String]
      | [Symbol]
      )
  end
end
